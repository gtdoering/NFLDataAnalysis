mutate(
previous = season - 1,
ypa = case_when(
week %in% c(2:17) ~ cum_pass_yards/cum_pass_attempts,
week == 1 ~  mean(avg_pass_yards[season == return(previous)])
)) %>%
arrange(season, week)
train <- model_2019 %>%
select(home_team, away_team, season, week, div_game, result, spread_line,
passing_yards, pass_attempt, posteam) %>%
filter(week %in% c(1:17),
!is.na(posteam),
season %in% c(2017,2018)) %>%
group_by(season, posteam, week ) %>%
summarise(home_team = unique(home_team),
away_team = unique(away_team),
div_game = unique(div_game),
result = unique(result),
spread = unique(spread_line),
passing_yards = sum(passing_yards, na.rm = TRUE),
pass_attempts = sum(pass_attempt, na.rm = TRUE)) %>%
mutate(fav_team = case_when(
spread < 0 ~ away_team,
spread >= 0 ~ home_team
), spread = case_when(
fav_team == away_team ~ -spread,
fav_team == home_team ~ spread
),fav_win = case_when(
fav_team == away_team & result <= 0 ~ 1,
fav_team == away_team & result > 0 ~ 0,
fav_team == home_team & result >= 0 ~ 1,
fav_team == home_team & result <0 ~ 0
), win = case_when(
fav_team == posteam ~ fav_win,
fav_team != posteam & fav_win == 0 ~ 1,
fav_team != posteam & fav_win == 1 ~ 0
),
cum_pass_yards = lag(cumsum(passing_yards), k = 1, default = 0),
avg_pass_yards = cum_pass_yards/(as.numeric(week)-1),
cum_pass_attempts = lag(cumsum(pass_attempts), k = 1, default = 0),
avg_pass_attempts = cum_pass_attempts/(as.numeric(week)-1),
) %>%
ungroup(season) %>%
mutate(
winning_form_5 = lag(rollsum(win, 5, align = "right", all.x = TRUE ,fill = NA), k = 1),
winning_form_10 = lag(rollsum(win, 10, align = "right", all.x = TRUE ,fill = NA), k = 1),
) %>%
select(season, week, fav_team, everything()) %>%
filter(!(season == 2017 & week %in% c(1:11))) %>%
mutate(
previous = season - 1,
ypa = case_when(
week %in% c(2:17) ~ cum_pass_yards/cum_pass_attempts,
week == 1 ~  mean(avg_pass_yards[season == print(previous)])
)) %>%
arrange(season, week)
train <- model_2019 %>%
select(home_team, away_team, season, week, div_game, result, spread_line,
passing_yards, pass_attempt, posteam) %>%
filter(week %in% c(1:17),
!is.na(posteam),
season %in% c(2017,2018)) %>%
group_by(season, posteam, week ) %>%
summarise(home_team = unique(home_team),
away_team = unique(away_team),
div_game = unique(div_game),
result = unique(result),
spread = unique(spread_line),
passing_yards = sum(passing_yards, na.rm = TRUE),
pass_attempts = sum(pass_attempt, na.rm = TRUE)) %>%
mutate(fav_team = case_when(
spread < 0 ~ away_team,
spread >= 0 ~ home_team
), spread = case_when(
fav_team == away_team ~ -spread,
fav_team == home_team ~ spread
),fav_win = case_when(
fav_team == away_team & result <= 0 ~ 1,
fav_team == away_team & result > 0 ~ 0,
fav_team == home_team & result >= 0 ~ 1,
fav_team == home_team & result <0 ~ 0
), win = case_when(
fav_team == posteam ~ fav_win,
fav_team != posteam & fav_win == 0 ~ 1,
fav_team != posteam & fav_win == 1 ~ 0
),
cum_pass_yards = lag(cumsum(passing_yards), k = 1, default = 0),
avg_pass_yards = cum_pass_yards/(as.numeric(week)-1),
cum_pass_attempts = lag(cumsum(pass_attempts), k = 1, default = 0),
avg_pass_attempts = cum_pass_attempts/(as.numeric(week)-1),
) %>%
ungroup(season) %>%
mutate(
winning_form_5 = lag(rollsum(win, 5, align = "right", all.x = TRUE ,fill = NA), k = 1),
winning_form_10 = lag(rollsum(win, 10, align = "right", all.x = TRUE ,fill = NA), k = 1),
) %>%
select(season, week, fav_team, everything()) %>%
filter(!(season == 2017 & week %in% c(1:11))) %>%
mutate(
previous = season - 1,
ypa = case_when(
week %in% c(2:17) ~ cum_pass_yards/cum_pass_attempts,
week == 1 ~  mean(avg_pass_yards[season == as.numeric(previous)])
)) %>%
arrange(season, week)
train <- model_2019 %>%
select(home_team, away_team, season, week, div_game, result, spread_line,
passing_yards, pass_attempt, posteam) %>%
filter(week %in% c(1:17),
!is.na(posteam),
season %in% c(2017,2018)) %>%
group_by(season, posteam, week ) %>%
summarise(home_team = unique(home_team),
away_team = unique(away_team),
div_game = unique(div_game),
result = unique(result),
spread = unique(spread_line),
passing_yards = sum(passing_yards, na.rm = TRUE),
pass_attempts = sum(pass_attempt, na.rm = TRUE)) %>%
mutate(fav_team = case_when(
spread < 0 ~ away_team,
spread >= 0 ~ home_team
), spread = case_when(
fav_team == away_team ~ -spread,
fav_team == home_team ~ spread
),fav_win = case_when(
fav_team == away_team & result <= 0 ~ 1,
fav_team == away_team & result > 0 ~ 0,
fav_team == home_team & result >= 0 ~ 1,
fav_team == home_team & result <0 ~ 0
), win = case_when(
fav_team == posteam ~ fav_win,
fav_team != posteam & fav_win == 0 ~ 1,
fav_team != posteam & fav_win == 1 ~ 0
),
cum_pass_yards = lag(cumsum(passing_yards), k = 1, default = 0),
avg_pass_yards = cum_pass_yards/(as.numeric(week)-1),
cum_pass_attempts = lag(cumsum(pass_attempts), k = 1, default = 0),
avg_pass_attempts = cum_pass_attempts/(as.numeric(week)-1),
) %>%
ungroup(season) %>%
mutate(
winning_form_5 = lag(rollsum(win, 5, align = "right", all.x = TRUE ,fill = NA), k = 1),
winning_form_10 = lag(rollsum(win, 10, align = "right", all.x = TRUE ,fill = NA), k = 1),
) %>%
select(season, week, fav_team, everything()) %>%
filter(!(season == 2017 & week %in% c(1:11))) %>%
mutate(
previous = season - 1,
ypa = case_when(
week %in% c(2:17) ~ cum_pass_yards/cum_pass_attempts,
week == 1 ~  previous
)) %>%
arrange(season, week)
train <- model_2019 %>%
select(home_team, away_team, season, week, div_game, result, spread_line,
passing_yards, pass_attempt, posteam) %>%
filter(week %in% c(1:17),
!is.na(posteam),
season %in% c(2017,2018)) %>%
group_by(season, posteam, week ) %>%
summarise(home_team = unique(home_team),
away_team = unique(away_team),
div_game = unique(div_game),
result = unique(result),
spread = unique(spread_line),
passing_yards = sum(passing_yards, na.rm = TRUE),
pass_attempts = sum(pass_attempt, na.rm = TRUE)) %>%
mutate(fav_team = case_when(
spread < 0 ~ away_team,
spread >= 0 ~ home_team
), spread = case_when(
fav_team == away_team ~ -spread,
fav_team == home_team ~ spread
),fav_win = case_when(
fav_team == away_team & result <= 0 ~ 1,
fav_team == away_team & result > 0 ~ 0,
fav_team == home_team & result >= 0 ~ 1,
fav_team == home_team & result <0 ~ 0
), win = case_when(
fav_team == posteam ~ fav_win,
fav_team != posteam & fav_win == 0 ~ 1,
fav_team != posteam & fav_win == 1 ~ 0
),
cum_pass_yards = lag(cumsum(passing_yards), k = 1, default = 0),
avg_pass_yards = cum_pass_yards/(as.numeric(week)-1),
cum_pass_attempts = lag(cumsum(pass_attempts), k = 1, default = 0),
avg_pass_attempts = cum_pass_attempts/(as.numeric(week)-1),
) %>%
ungroup(season) %>%
mutate(
winning_form_5 = lag(rollsum(win, 5, align = "right", all.x = TRUE ,fill = NA), k = 1),
winning_form_10 = lag(rollsum(win, 10, align = "right", all.x = TRUE ,fill = NA), k = 1),
) %>%
select(season, week, fav_team, everything()) %>%
filter(!(season == 2017 & week %in% c(1:11))) %>%
mutate(
previous = season - 1,
ypa = case_when(
week %in% c(2:17) ~ cum_pass_yards/cum_pass_attempts,
week == 1 ~  season
)) %>%
arrange(season, week)
train <- model_2019 %>%
select(home_team, away_team, season, week, div_game, result, spread_line,
passing_yards, pass_attempt, posteam) %>%
filter(week %in% c(1:17),
!is.na(posteam),
season %in% c(2017,2018)) %>%
group_by(season, posteam, week ) %>%
summarise(home_team = unique(home_team),
away_team = unique(away_team),
div_game = unique(div_game),
result = unique(result),
spread = unique(spread_line),
passing_yards = sum(passing_yards, na.rm = TRUE),
pass_attempts = sum(pass_attempt, na.rm = TRUE)) %>%
mutate(fav_team = case_when(
spread < 0 ~ away_team,
spread >= 0 ~ home_team
), spread = case_when(
fav_team == away_team ~ -spread,
fav_team == home_team ~ spread
),fav_win = case_when(
fav_team == away_team & result <= 0 ~ 1,
fav_team == away_team & result > 0 ~ 0,
fav_team == home_team & result >= 0 ~ 1,
fav_team == home_team & result <0 ~ 0
), win = case_when(
fav_team == posteam ~ fav_win,
fav_team != posteam & fav_win == 0 ~ 1,
fav_team != posteam & fav_win == 1 ~ 0
),
cum_pass_yards = lag(cumsum(passing_yards), k = 1, default = 0),
avg_pass_yards = cum_pass_yards/(as.numeric(week)-1),
cum_pass_attempts = lag(cumsum(pass_attempts), k = 1, default = 0),
avg_pass_attempts = cum_pass_attempts/(as.numeric(week)-1),
) %>%
ungroup(season) %>%
mutate(
winning_form_5 = lag(rollsum(win, 5, align = "right", all.x = TRUE ,fill = NA), k = 1),
winning_form_10 = lag(rollsum(win, 10, align = "right", all.x = TRUE ,fill = NA), k = 1),
) %>%
select(season, week, fav_team, everything()) %>%
filter(!(season == 2017 & week %in% c(1:11))) %>%
mutate(
previous = season - 1,
ypa = case_when(
week %in% c(2:17) ~ cum_pass_yards/cum_pass_attempts,
week == 1 ~  sum(cum_pass_yards[season %in% previous])
)) %>%
arrange(season, week)
train <- model_2019 %>%
select(home_team, away_team, season, week, div_game, result, spread_line,
passing_yards, pass_attempt, posteam) %>%
filter(week %in% c(1:17),
!is.na(posteam),
season %in% c(2017,2018)) %>%
group_by(season, posteam, week ) %>%
summarise(home_team = unique(home_team),
away_team = unique(away_team),
div_game = unique(div_game),
result = unique(result),
spread = unique(spread_line),
passing_yards = sum(passing_yards, na.rm = TRUE),
pass_attempts = sum(pass_attempt, na.rm = TRUE)) %>%
mutate(fav_team = case_when(
spread < 0 ~ away_team,
spread >= 0 ~ home_team
), spread = case_when(
fav_team == away_team ~ -spread,
fav_team == home_team ~ spread
),fav_win = case_when(
fav_team == away_team & result <= 0 ~ 1,
fav_team == away_team & result > 0 ~ 0,
fav_team == home_team & result >= 0 ~ 1,
fav_team == home_team & result <0 ~ 0
), win = case_when(
fav_team == posteam ~ fav_win,
fav_team != posteam & fav_win == 0 ~ 1,
fav_team != posteam & fav_win == 1 ~ 0
),
cum_pass_yards = lag(cumsum(passing_yards), k = 1, default = 0),
avg_pass_yards = cum_pass_yards/(as.numeric(week)-1),
cum_pass_attempts = lag(cumsum(pass_attempts), k = 1, default = 0),
avg_pass_attempts = cum_pass_attempts/(as.numeric(week)-1),
) %>%
ungroup(season) %>%
mutate(
winning_form_5 = lag(rollsum(win, 5, align = "right", all.x = TRUE ,fill = NA), k = 1),
winning_form_10 = lag(rollsum(win, 10, align = "right", all.x = TRUE ,fill = NA), k = 1),
) %>%
select(season, week, fav_team, everything()) %>%
filter(!(season == 2017 & week %in% c(1:11))) %>%
mutate(
previous = season - 1,
ypa = case_when(
week %in% c(2:17) ~ cum_pass_yards/cum_pass_attempts,
week == 1 ~  mean(cum_pass_yards[season %in% previous])
)) %>%
arrange(season, week)
train <- model_2019 %>%
select(home_team, away_team, season, week, div_game, result, spread_line,
passing_yards, pass_attempt, posteam) %>%
filter(week %in% c(1:17),
!is.na(posteam),
season %in% c(2017,2018)) %>%
group_by(season, posteam, week ) %>%
summarise(home_team = unique(home_team),
away_team = unique(away_team),
div_game = unique(div_game),
result = unique(result),
spread = unique(spread_line),
passing_yards = sum(passing_yards, na.rm = TRUE),
pass_attempts = sum(pass_attempt, na.rm = TRUE)) %>%
mutate(fav_team = case_when(
spread < 0 ~ away_team,
spread >= 0 ~ home_team
), spread = case_when(
fav_team == away_team ~ -spread,
fav_team == home_team ~ spread
),fav_win = case_when(
fav_team == away_team & result <= 0 ~ 1,
fav_team == away_team & result > 0 ~ 0,
fav_team == home_team & result >= 0 ~ 1,
fav_team == home_team & result <0 ~ 0
), win = case_when(
fav_team == posteam ~ fav_win,
fav_team != posteam & fav_win == 0 ~ 1,
fav_team != posteam & fav_win == 1 ~ 0
),
cum_pass_yards = lag(cumsum(passing_yards), k = 1, default = 0),
avg_pass_yards = cum_pass_yards/(as.numeric(week)-1),
cum_pass_attempts = lag(cumsum(pass_attempts), k = 1, default = 0),
avg_pass_attempts = cum_pass_attempts/(as.numeric(week)-1),
) %>%
ungroup(season) %>%
mutate(
winning_form_5 = lag(rollsum(win, 5, align = "right", all.x = TRUE ,fill = NA), k = 1),
winning_form_10 = lag(rollsum(win, 10, align = "right", all.x = TRUE ,fill = NA), k = 1),
) %>%
select(season, week, fav_team, everything()) %>%
filter(!(season == 2017 & week %in% c(1:11))) %>%
mutate(
previous = season - 1,
ypa = case_when(
week %in% c(2:17) ~ cum_pass_yards/cum_pass_attempts,
week == 1 ~  max(cum_pass_yards[season %in% previous])/mean()
)) %>%
arrange(season, week)
week == 1 ~  max(cum_pass_yards[season %in% previous])
week == 1 ~  max(cum_pass_yards[season %in% previous])) %>%
train <- model_2019 %>%
select(home_team, away_team, season, week, div_game, result, spread_line,
passing_yards, pass_attempt, posteam) %>%
filter(week %in% c(1:17),
!is.na(posteam),
season %in% c(2017,2018)) %>%
group_by(season, posteam, week ) %>%
summarise(home_team = unique(home_team),
away_team = unique(away_team),
div_game = unique(div_game),
result = unique(result),
spread = unique(spread_line),
passing_yards = sum(passing_yards, na.rm = TRUE),
pass_attempts = sum(pass_attempt, na.rm = TRUE)) %>%
mutate(fav_team = case_when(
spread < 0 ~ away_team,
spread >= 0 ~ home_team
), spread = case_when(
fav_team == away_team ~ -spread,
fav_team == home_team ~ spread
),fav_win = case_when(
fav_team == away_team & result <= 0 ~ 1,
fav_team == away_team & result > 0 ~ 0,
fav_team == home_team & result >= 0 ~ 1,
fav_team == home_team & result <0 ~ 0
), win = case_when(
fav_team == posteam ~ fav_win,
fav_team != posteam & fav_win == 0 ~ 1,
fav_team != posteam & fav_win == 1 ~ 0
),
cum_pass_yards = lag(cumsum(passing_yards), k = 1, default = 0),
avg_pass_yards = cum_pass_yards/(as.numeric(week)-1),
cum_pass_attempts = lag(cumsum(pass_attempts), k = 1, default = 0),
avg_pass_attempts = cum_pass_attempts/(as.numeric(week)-1),
) %>%
ungroup(season) %>%
mutate(
winning_form_5 = lag(rollsum(win, 5, align = "right", all.x = TRUE ,fill = NA), k = 1),
winning_form_10 = lag(rollsum(win, 10, align = "right", all.x = TRUE ,fill = NA), k = 1),
) %>%
select(season, week, fav_team, everything()) %>%
filter(!(season == 2017 & week %in% c(1:11))) %>%
mutate(
previous = season - 1,
ypa = case_when(
week %in% c(2:17) ~ cum_pass_yards/cum_pass_attempts,
week == 1 ~  max(cum_pass_yards[season %in% previous])
)
)%>%
arrange(season, week)
train <- model_2019 %>%
select(home_team, away_team, season, week, div_game, result, spread_line,
passing_yards, pass_attempt, posteam, sack) %>%
filter(week %in% c(1:17),
!is.na(posteam),
season %in% c(2017,2018)) %>%
group_by(season, posteam, week ) %>%
summarise(home_team = unique(home_team),
away_team = unique(away_team),
div_game = unique(div_game),
result = unique(result),
spread = unique(spread_line),
passing_yards = sum(passing_yards, na.rm = TRUE),
pass_attempts = sum(pass_attempt, na.rm = TRUE)) - sum(sack, na.rm = TRUE)%>%
mutate(fav_team = case_when(
spread < 0 ~ away_team,
spread >= 0 ~ home_team
), spread = case_when(
fav_team == away_team ~ -spread,
fav_team == home_team ~ spread
),fav_win = case_when(
fav_team == away_team & result <= 0 ~ 1,
fav_team == away_team & result > 0 ~ 0,
fav_team == home_team & result >= 0 ~ 1,
fav_team == home_team & result <0 ~ 0
), win = case_when(
fav_team == posteam ~ fav_win,
fav_team != posteam & fav_win == 0 ~ 1,
fav_team != posteam & fav_win == 1 ~ 0
),
cum_pass_yards = lag(cumsum(passing_yards), k = 1, default = 0),
avg_pass_yards = cum_pass_yards/(as.numeric(week)-1),
cum_pass_attempts = lag(cumsum(pass_attempts), k = 1, default = 0),
avg_pass_attempts = cum_pass_attempts/(as.numeric(week)-1),
) %>%
ungroup(season) %>%
mutate(
winning_form_5 = lag(rollsum(win, 5, align = "right", all.x = TRUE ,fill = NA), k = 1),
winning_form_10 = lag(rollsum(win, 10, align = "right", all.x = TRUE ,fill = NA), k = 1),
) %>%
select(season, week, fav_team, everything()) %>%
filter(!(season == 2017 & week %in% c(1:11))) %>%
mutate(
previous = season - 1,
ypa = case_when(
week %in% c(2:17) ~ cum_pass_yards/cum_pass_attempts,
week == 1 ~  max(cum_pass_yards[season %in% previous])
)
)%>%
arrange(season, week)
train <- model_2019 %>%
select(home_team, away_team, season, week, div_game, result, spread_line,
passing_yards, pass_attempt, posteam, sack) %>%
filter(week %in% c(1:17),
!is.na(posteam),
season %in% c(2017,2018)) %>%
group_by(season, posteam, week ) %>%
summarise(home_team = unique(home_team),
away_team = unique(away_team),
div_game = unique(div_game),
result = unique(result),
spread = unique(spread_line),
sacks = sum(sack, na.rm = TRUE),
passing_yards = sum(passing_yards, na.rm = TRUE),
pass_attempts = sum(pass_attempt, na.rm = TRUE)- sacks) %>%
mutate(fav_team = case_when(
spread < 0 ~ away_team,
spread >= 0 ~ home_team
), spread = case_when(
fav_team == away_team ~ -spread,
fav_team == home_team ~ spread
),fav_win = case_when(
fav_team == away_team & result <= 0 ~ 1,
fav_team == away_team & result > 0 ~ 0,
fav_team == home_team & result >= 0 ~ 1,
fav_team == home_team & result <0 ~ 0
), win = case_when(
fav_team == posteam ~ fav_win,
fav_team != posteam & fav_win == 0 ~ 1,
fav_team != posteam & fav_win == 1 ~ 0
),
cum_pass_yards = lag(cumsum(passing_yards), k = 1, default = 0),
avg_pass_yards = cum_pass_yards/(as.numeric(week)-1),
cum_pass_attempts = lag(cumsum(pass_attempts), k = 1, default = 0),
avg_pass_attempts = cum_pass_attempts/(as.numeric(week)-1),
) %>%
ungroup(season) %>%
mutate(
winning_form_5 = lag(rollsum(win, 5, align = "right", all.x = TRUE ,fill = NA), k = 1),
winning_form_10 = lag(rollsum(win, 10, align = "right", all.x = TRUE ,fill = NA), k = 1),
) %>%
select(season, week, fav_team, everything()) %>%
filter(!(season == 2017 & week %in% c(1:11))) %>%
mutate(
previous = season - 1,
ypa = case_when(
week %in% c(2:17) ~ cum_pass_yards/cum_pass_attempts,
week == 1 ~  max(cum_pass_yards[season %in% previous])
)
)%>%
arrange(season, week)
renv::init()
renv::init()
renv::init()
library(renv)
install.packages("renv")
renv::init()
remove.packages("BiocManager", lib="~/tmp/NFLDataAnalysis/renv/library/R-4.0/x86_64-w64-mingw32")
renv::snapshot(confirm = FALSE)
renv::init()
